/*! For license information please see main.bundle.js.LICENSE.txt */
(self.webpackChunkthreejs_es6_webpack_boilerplate=self.webpackChunkthreejs_es6_webpack_boilerplate||[]).push([["main"],{"./src/js/app.js":(e,t,r)=>{"use strict";r.r(t);var o=r("./src/js/data/config.js"),s=r("./src/js/utils/detector.js"),n=r("./src/js/app/main.js");r("./src/css/app.scss");console.log("----- RUNNING IN DEV ENVIRONMENT! -----"),o.default.isDev=!0,function(){if(s.default.webgl){document.getElementById("appContainer");(new n.default).render()}else s.default.addGetWebGLMessage()}()},"./src/js/app/main.js":(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>i});var o=r("./node_modules/three/build/three.module.js"),s=r("./node_modules/chroma-js/chroma.js"),n=r.n(s),a=r("./node_modules/three/examples/jsm/controls/OrbitControls.js");r("./node_modules/randomcolor/randomColor.js");new o.Color,new o.Color;class i{constructor(){this.mySwitch=!0;this.camera=new o.PerspectiveCamera(45,window.innerWidth/window.innerHeight,.1,100),this.camera.position.set(0,0,50),this.scene=new o.Scene,this.renderer=new o.WebGLRenderer,this.renderer.shadowMapEnabled=!0,document.body.appendChild(this.renderer.domElement);const e=new a.OrbitControls(this.camera,this.renderer.domElement);e.target.set(0,5,0),e.update();const t=100,r=new o.BufferGeometry;let s=[];for(let e=0;e<20;e++)for(let r=0;r<t;r++){let t=new o.Vector3(25*r,15*Math.random(),25*e);s.push(t)}let i=new Float32Array(s);r.setAttribute("position",new o.BufferAttribute(i,3));let l=[],d=n().scale(["blue","green","red"]).domain([0,15]);for(let e=0;e<19;e++)for(let s=0;s<99;s++){let n=s+e*t,a=s+1+e*t,i=s+(e+1)*t,m=s+1+(e+1)*t,h=new o.BufferGeometry(a,n,i),p=new o.BufferGeometry(i,m,a);h.color=new o.Color(d(c(r,h)).hex()),p.color=new o.Color(d(c(r,p)).hex()),l.push(h),l.push(p)}function c(e,t){let r=e.vertices[t.a].y,o=e.vertices[t.b].y,s=e.vertices[t.c].y;return Math.max(r,o,s)}r.addAttribute("color",new o.BufferAttribute(l,3)),r.computeFaceNormals();let m=new o.MeshPhongMaterial;m.vertexColors=o.FaceColors;let h=new o.Mesh(r,m);h.translateX(-100/1.5),h.translateZ(-5),h.name="terrain",this.scene.add(h),this.camera.lookAt(eye.position),this.render=this.render.bind(this)}render(e){this.renderer.render(this.scene,this.camera),requestAnimationFrame(this.render)}}},"./src/js/data/config.js":(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>o});const o={isDev:!1,isShowingStats:!0,isLoaded:!1,isTweening:!1,isRotating:!0,isMouseMoving:!1,isMouseOver:!1,maxAnisotropy:1,dpr:1,easing:r("./node_modules/@tweenjs/tween.js/dist/tween.esm.js").default.Easing.Quadratic.InOut,duration:500,model:{selected:0,initialTypes:["gltf","object"],type:"gltf"},models:[{path:"./assets/models/duck.gltf",scale:20,type:"gltf"},{path:"./assets/models/Teapot.json",scale:20,type:"object"}],texture:{path:"./assets/textures/",imageFiles:[{name:"UV",image:"UV_Grid_Sm.jpg"}]},mesh:{enableHelper:!0,wireframe:!1,translucent:!1,material:{color:16777215,emissive:16777215}},fog:{color:16777215,near:8e-4},camera:{fov:40,near:2,far:1e3,aspect:1,posX:0,posY:30,posZ:40},controls:{autoRotate:!0,autoRotateSpeed:-.5,rotateSpeed:.5,zoomSpeed:.8,minDistance:200,maxDistance:600,minPolarAngle:Math.PI/5,maxPolarAngle:Math.PI/2,minAzimuthAngle:-1/0,maxAzimuthAngle:1/0,enableDamping:!0,dampingFactor:.5,enableZoom:!0,target:{x:0,y:0,z:0}},ambientLight:{enabled:!0,color:1315860},directionalLight:{enabled:!0,color:15790320,intensity:.4,x:-75,y:280,z:150},shadow:{enabled:!0,helperEnabled:!0,bias:0,mapWidth:2048,mapHeight:2048,near:250,far:400,top:100,right:100,bottom:-100,left:-100},pointLight:{enabled:!0,color:16777215,intensity:.34,distance:115,x:0,y:0,z:0},hemiLight:{enabled:!0,color:13158600,groundColor:16777215,intensity:.55,x:0,y:0,z:0}}},"./src/js/utils/detector.js":(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>o});const o={canvas:!!window.CanvasRenderingContext2D,webgl:function(){try{var e=document.createElement("canvas");return!(!window.WebGLRenderingContext||!e.getContext("webgl")&&!e.getContext("experimental-webgl"))}catch(e){return!1}}(),workers:!!window.Worker,fileapi:window.File&&window.FileReader&&window.FileList&&window.Blob,getWebGLErrorMessage:function(){var e=document.createElement("div");return e.id="webgl-error-message",e.style.fontFamily="monospace",e.style.fontSize="13px",e.style.fontWeight="normal",e.style.textAlign="center",e.style.background="#fff",e.style.color="#000",e.style.padding="1.5em",e.style.width="400px",e.style.margin="5em auto 0",this.webgl||(e.innerHTML=window.WebGLRenderingContext?['Your graphics card does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000000">WebGL</a>.<br />','Find out how to get it <a href="http://get.webgl.org/" style="color:#000000">here</a>.'].join("\n"):['Your browser does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000000">WebGL</a>.<br/>','Find out how to get it <a href="http://get.webgl.org/" style="color:#000000">here</a>.'].join("\n")),e},addGetWebGLMessage:function(e){var t,r,o;t=void 0!==(e=e||{}).parent?e.parent:document.body,r=void 0!==e.id?e.id:"oldie",(o=this.getWebGLErrorMessage()).id=r,t.appendChild(o)}}},"./src/css/app.scss":(e,t,r)=>{"use strict";r.r(t)}},e=>{"use strict";e.O(0,["vendors"],(()=>{return t="./src/js/app.js",e(e.s=t);var t}));e.O()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,