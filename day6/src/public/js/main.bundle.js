/*! For license information please see main.bundle.js.LICENSE.txt */
(self.webpackChunkthreejs_es6_webpack_boilerplate=self.webpackChunkthreejs_es6_webpack_boilerplate||[]).push([["main"],{"./src/js/app.js":(e,t,o)=>{"use strict";o.r(t);var s=o("./src/js/data/config.js"),r=o("./src/js/utils/detector.js"),n=o("./src/js/app/main.js");o("./src/css/app.scss");console.log("----- RUNNING IN DEV ENVIRONMENT! -----"),s.default.isDev=!0,function(){if(r.default.webgl){document.getElementById("appContainer");let e=new n.default;e.buildFloorMesh(),e.render(20)}else r.default.addGetWebGLMessage()}()},"./src/js/app/main.js":(e,t,o)=>{"use strict";o.r(t),o.d(t,{default:()=>d});var s=o("./node_modules/three/build/three.module.js"),r=(o("./node_modules/chroma-js/chroma.js"),o("./node_modules/three/examples/jsm/controls/OrbitControls.js")),n=o("../node_modules/three/examples/jsm/libs/lil-gui.module.min.js"),i=o("./src/js/utils/ColorGUIHelper.js"),a=o("./node_modules/randomcolor/randomColor.js"),l=o.n(a);new s.Color,new s.Color;class d{constructor(){this.camera=new s.PerspectiveCamera(60,window.innerWidth/window.innerHeight,.1,1e3),this.camera.position.set(0,15,90),this.scene=new s.Scene,this.renderer=new s.WebGLRenderer({antialising:!0}),this.renderer.shadowMapEnabled=!0,document.body.append(this.renderer.domElement);const e=new r.OrbitControls(this.camera,this.renderer.domElement);e.target.set(0,5,0),e.update();const t=16777215;this.light=new s.DirectionalLight(t,1.3),this.light.position.setScalar(1),this.scene.add(this.light.target),this.scene.add(this.light,new s.AmbientLight(t,.25));const o=new n.GUI;o.addColor(new i.default(this.light,"color"),"value").name("color"),o.add(this.light,"intensity",0,2,.01),console.log("foo"),this.render=this.render.bind(this),this.buildFloorMesh=this.buildFloorMesh.bind(this)}buildFloorMesh(){let e,t=new s.PlaneBufferGeometry(2e3,2e3,100,100),o=[];console.log("vertices? ",t.attributes.position);for(let r=0;r<t.attributes.position.array.length;r++){console.log(l()({format:"rgb"}));let n=new s.Color(l()({format:"rgb"}));console.log("color: ",n),o.push(n.r,n.g,n.b),console.log("ping");let i=20;e=Math.floor(Math.random()*(0- -i)-i),t.attributes.position.setZ(r,e)}t.attributes.position.needsUpdate=!0,console.log("colors: ",o),t.setAttribute("color",new s.BufferAttribute(new Float32Array(o),3)),t.attributes.color.needsUpdate=!0,t.computeVertexNormals();let r=new s.MeshPhongMaterial({color:16562691});r.flatShading=!0;let n=new s.Mesh(t,r);n.receiveShadow=!0,n.castShadow=!0,n.name="floor",n.rotation.x=-Math.PI/2,console.log("mesh position,",n.position),this.scene.add(n)}render(e){e*=.001,this.camera.rotation.y=-e/6,this.renderer.render(this.scene,this.camera),requestAnimationFrame(this.render)}}},"./src/js/data/config.js":(e,t,o)=>{"use strict";o.r(t),o.d(t,{default:()=>s});const s={isDev:!1,isShowingStats:!0,isLoaded:!1,isTweening:!1,isRotating:!0,isMouseMoving:!1,isMouseOver:!1,maxAnisotropy:1,dpr:1,easing:o("./node_modules/@tweenjs/tween.js/dist/tween.esm.js").default.Easing.Quadratic.InOut,duration:500,model:{selected:0,initialTypes:["gltf","object"],type:"gltf"},models:[{path:"./assets/models/duck.gltf",scale:20,type:"gltf"},{path:"./assets/models/Teapot.json",scale:20,type:"object"}],texture:{path:"./assets/textures/",imageFiles:[{name:"UV",image:"UV_Grid_Sm.jpg"}]},mesh:{enableHelper:!0,wireframe:!1,translucent:!1,material:{color:16777215,emissive:16777215}},fog:{color:16777215,near:8e-4},camera:{fov:40,near:2,far:1e3,aspect:1,posX:0,posY:30,posZ:40},controls:{autoRotate:!0,autoRotateSpeed:-.5,rotateSpeed:.5,zoomSpeed:.8,minDistance:200,maxDistance:600,minPolarAngle:Math.PI/5,maxPolarAngle:Math.PI/2,minAzimuthAngle:-1/0,maxAzimuthAngle:1/0,enableDamping:!0,dampingFactor:.5,enableZoom:!0,target:{x:0,y:0,z:0}},ambientLight:{enabled:!0,color:1315860},directionalLight:{enabled:!0,color:15790320,intensity:.4,x:-75,y:280,z:150},shadow:{enabled:!0,helperEnabled:!0,bias:0,mapWidth:2048,mapHeight:2048,near:250,far:400,top:100,right:100,bottom:-100,left:-100},pointLight:{enabled:!0,color:16777215,intensity:.34,distance:115,x:0,y:0,z:0},hemiLight:{enabled:!0,color:13158600,groundColor:16777215,intensity:.55,x:0,y:0,z:0}}},"./src/js/utils/ColorGUIHelper.js":(e,t,o)=>{"use strict";o.r(t),o.d(t,{default:()=>s});class s{constructor(e,t){this.object=e,this.prop=t}get value(){return`#${this.object[this.prop].getHexString()}`}set value(e){this.object[this.prop].set(e)}}},"./src/js/utils/detector.js":(e,t,o)=>{"use strict";o.r(t),o.d(t,{default:()=>s});const s={canvas:!!window.CanvasRenderingContext2D,webgl:function(){try{var e=document.createElement("canvas");return!(!window.WebGLRenderingContext||!e.getContext("webgl")&&!e.getContext("experimental-webgl"))}catch(e){return!1}}(),workers:!!window.Worker,fileapi:window.File&&window.FileReader&&window.FileList&&window.Blob,getWebGLErrorMessage:function(){var e=document.createElement("div");return e.id="webgl-error-message",e.style.fontFamily="monospace",e.style.fontSize="13px",e.style.fontWeight="normal",e.style.textAlign="center",e.style.background="#fff",e.style.color="#000",e.style.padding="1.5em",e.style.width="400px",e.style.margin="5em auto 0",this.webgl||(e.innerHTML=window.WebGLRenderingContext?['Your graphics card does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000000">WebGL</a>.<br />','Find out how to get it <a href="http://get.webgl.org/" style="color:#000000">here</a>.'].join("\n"):['Your browser does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000000">WebGL</a>.<br/>','Find out how to get it <a href="http://get.webgl.org/" style="color:#000000">here</a>.'].join("\n")),e},addGetWebGLMessage:function(e){var t,o,s;t=void 0!==(e=e||{}).parent?e.parent:document.body,o=void 0!==e.id?e.id:"oldie",(s=this.getWebGLErrorMessage()).id=o,t.appendChild(s)}}},"./src/css/app.scss":(e,t,o)=>{"use strict";o.r(t)}},e=>{"use strict";e.O(0,["vendors"],(()=>{return t="./src/js/app.js",e(e.s=t);var t}));e.O()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90aHJlZWpzLWVzNi13ZWJwYWNrLWJvaWxlcnBsYXRlLy4vc3JjL2pzL2FwcC5qcyIsIndlYnBhY2s6Ly90aHJlZWpzLWVzNi13ZWJwYWNrLWJvaWxlcnBsYXRlLy4vc3JjL2pzL2FwcC9tYWluLmpzIiwid2VicGFjazovL3RocmVlanMtZXM2LXdlYnBhY2stYm9pbGVycGxhdGUvLi9zcmMvanMvZGF0YS9jb25maWcuanMiLCJ3ZWJwYWNrOi8vdGhyZWVqcy1lczYtd2VicGFjay1ib2lsZXJwbGF0ZS8uL3NyYy9qcy91dGlscy9Db2xvckdVSUhlbHBlci5qcyIsIndlYnBhY2s6Ly90aHJlZWpzLWVzNi13ZWJwYWNrLWJvaWxlcnBsYXRlLy4vc3JjL2pzL3V0aWxzL2RldGVjdG9yLmpzIl0sIm5hbWVzIjpbImNvbnNvbGUiLCJsb2ciLCJDb25maWciLCJEZXRlY3RvciIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJncm91bmQiLCJUZXh0dXJlIiwiYnVpbGRGbG9vck1lc2giLCJyZW5kZXIiLCJpbml0IiwiVEhSRUUiLCJjb25zdHJ1Y3RvciIsInRoaXMiLCJjYW1lcmEiLCJ3aW5kb3ciLCJpbm5lcldpZHRoIiwiaW5uZXJIZWlnaHQiLCJwb3NpdGlvbiIsInNldCIsInNjZW5lIiwicmVuZGVyZXIiLCJhbnRpYWxpc2luZyIsInNoYWRvd01hcEVuYWJsZWQiLCJib2R5IiwiYXBwZW5kIiwiZG9tRWxlbWVudCIsImNvbnRyb2xzIiwiT3JiaXRDb250cm9scyIsInRhcmdldCIsInVwZGF0ZSIsImNvbG9yIiwibGlnaHQiLCJzZXRTY2FsYXIiLCJhZGQiLCJndWkiLCJHVUkiLCJhZGRDb2xvciIsIkNvbG9yR1VJSGVscGVyIiwibmFtZSIsImJpbmQiLCJyYW5kb21GbG9vclZlcnRleFBvcyIsImZsb29yIiwiY29sb3JzIiwiYXR0cmlidXRlcyIsImkiLCJhcnJheSIsImxlbmd0aCIsInJhbmRvbUNvbG9yIiwiZm9ybWF0IiwicHVzaCIsInIiLCJnIiwiYiIsInJhbmdlIiwiTWF0aCIsInJhbmRvbSIsInNldFoiLCJuZWVkc1VwZGF0ZSIsInNldEF0dHJpYnV0ZSIsIkZsb2F0MzJBcnJheSIsImNvbXB1dGVWZXJ0ZXhOb3JtYWxzIiwiZmxvb3JNYXRlcmlhbCIsImZsYXRTaGFkaW5nIiwiZmxvb3JNZXNoIiwicmVjZWl2ZVNoYWRvdyIsImNhc3RTaGFkb3ciLCJyb3RhdGlvbiIsIngiLCJQSSIsInRpbWUiLCJ5IiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiaXNEZXYiLCJpc1Nob3dpbmdTdGF0cyIsImlzTG9hZGVkIiwiaXNUd2VlbmluZyIsImlzUm90YXRpbmciLCJpc01vdXNlTW92aW5nIiwiaXNNb3VzZU92ZXIiLCJtYXhBbmlzb3Ryb3B5IiwiZHByIiwiZWFzaW5nIiwiVFdFRU4iLCJkdXJhdGlvbiIsIm1vZGVsIiwic2VsZWN0ZWQiLCJpbml0aWFsVHlwZXMiLCJ0eXBlIiwibW9kZWxzIiwicGF0aCIsInNjYWxlIiwidGV4dHVyZSIsImltYWdlRmlsZXMiLCJpbWFnZSIsIm1lc2giLCJlbmFibGVIZWxwZXIiLCJ3aXJlZnJhbWUiLCJ0cmFuc2x1Y2VudCIsIm1hdGVyaWFsIiwiZW1pc3NpdmUiLCJmb2ciLCJuZWFyIiwiZm92IiwiZmFyIiwiYXNwZWN0IiwicG9zWCIsInBvc1kiLCJwb3NaIiwiYXV0b1JvdGF0ZSIsImF1dG9Sb3RhdGVTcGVlZCIsInJvdGF0ZVNwZWVkIiwiem9vbVNwZWVkIiwibWluRGlzdGFuY2UiLCJtYXhEaXN0YW5jZSIsIm1pblBvbGFyQW5nbGUiLCJtYXhQb2xhckFuZ2xlIiwibWluQXppbXV0aEFuZ2xlIiwiSW5maW5pdHkiLCJtYXhBemltdXRoQW5nbGUiLCJlbmFibGVEYW1waW5nIiwiZGFtcGluZ0ZhY3RvciIsImVuYWJsZVpvb20iLCJ6IiwiYW1iaWVudExpZ2h0IiwiZW5hYmxlZCIsImRpcmVjdGlvbmFsTGlnaHQiLCJpbnRlbnNpdHkiLCJzaGFkb3ciLCJoZWxwZXJFbmFibGVkIiwiYmlhcyIsIm1hcFdpZHRoIiwibWFwSGVpZ2h0IiwidG9wIiwicmlnaHQiLCJib3R0b20iLCJsZWZ0IiwicG9pbnRMaWdodCIsImRpc3RhbmNlIiwiaGVtaUxpZ2h0IiwiZ3JvdW5kQ29sb3IiLCJvYmplY3QiLCJwcm9wIiwiZ2V0SGV4U3RyaW5nIiwiaGV4U3RyaW5nIiwiY2FudmFzIiwiQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJEIiwid2ViZ2wiLCJjcmVhdGVFbGVtZW50IiwiV2ViR0xSZW5kZXJpbmdDb250ZXh0IiwiZ2V0Q29udGV4dCIsImUiLCJ3b3JrZXJzIiwiV29ya2VyIiwiZmlsZWFwaSIsIkZpbGUiLCJGaWxlUmVhZGVyIiwiRmlsZUxpc3QiLCJCbG9iIiwiZ2V0V2ViR0xFcnJvck1lc3NhZ2UiLCJlbGVtZW50IiwiaWQiLCJzdHlsZSIsImZvbnRGYW1pbHkiLCJmb250U2l6ZSIsImZvbnRXZWlnaHQiLCJ0ZXh0QWxpZ24iLCJiYWNrZ3JvdW5kIiwicGFkZGluZyIsIndpZHRoIiwibWFyZ2luIiwiaW5uZXJIVE1MIiwiam9pbiIsImFkZEdldFdlYkdMTWVzc2FnZSIsInBhcmFtZXRlcnMiLCJwYXJlbnQiLCJ1bmRlZmluZWQiLCJhcHBlbmRDaGlsZCJdLCJtYXBwaW5ncyI6IjtpU0FTRUEsUUFBUUMsSUFBSSwyQ0FFWkMsaUJBQWUsRUFHakIsV0FFRSxHQUFJQyxnQkFFRyxDQUNhQyxTQUFTQyxlQUFlLGdCQUMxQyxJQUFJQyxFQUFTLElBQUlDLFVBQ2pCRCxFQUFPRSxpQkFDUEYsRUFBT0csT0FBTyxTQUxkTiwrQkFTSk8sSSxzWkNqQnVCLElBQUlDLFFBQ1IsSUFBSUEsUUFJUixNQUFNSixFQUNqQkssY0FPSUMsS0FBS0MsT0FBUyxJQUFJSCxvQkFBd0IsR0FBSUksT0FBT0MsV0FBYUQsT0FBT0UsWUFBYSxHQUFLLEtBQzNGSixLQUFLQyxPQUFPSSxTQUFTQyxJQUFJLEVBQUcsR0FBSSxJQUNoQ04sS0FBS08sTUFBUSxJQUFJVCxRQUNqQkUsS0FBS1EsU0FBVyxJQUFJVixnQkFBb0IsQ0FBQ1cs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QUNqRCw0SkFDQSwwRkFDQXVCLEtBQUssTUFBUSxDQUNiLHFKQUNBLDBGQUNBQSxLQUFLLE9BR0ZaLEdBR1RhLG1CQUFvQixTQUFTQyxHQUMzQixJQUFJQyxFQUFRZCxFQUFJRCxFQUloQmUsT0FBK0JDLEtBRi9CRixFQUFhQSxHQUFjLElBRVBDLE9BQXVCRCxFQUFXQyxPQUFTM0ssU0FBU29CLEtBQ3hFeUksT0FBdUJlLElBQWxCRixFQUFXYixHQUFtQmEsRUFBV2IsR0FBSyxTQUVuREQsRUFBVW5KLEtBQUtrSix3QkFDUEUsR0FBS0EsRUFFYmMsRUFBT0UsWUFBWWpCLE0iLCJmaWxlIjoibWFpbi5idW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ29uZmlnIGZyb20gJy4vZGF0YS9jb25maWcnO1xuaW1wb3J0IERldGVjdG9yIGZyb20gJy4vdXRpbHMvZGV0ZWN0b3InO1xuaW1wb3J0IFRleHR1cmUgZnJvbSAnLi9hcHAvbWFpbic7XG5cbi8vIFN0eWxlc1xuaW1wb3J0ICcuLy4uL2Nzcy9hcHAuc2Nzcyc7XG5cbi8vIENoZWNrIGVudmlyb25tZW50IGFuZCBzZXQgdGhlIENvbmZpZyBoZWxwZXJcbmlmKF9fRU5WX18gPT09ICdkZXYnKSB7XG4gIGNvbnNvbGUubG9nKCctLS0tLSBSVU5OSU5HIElOIERFViBFTlZJUk9OTUVOVCEgLS0tLS0nKTtcblxuICBDb25maWcuaXNEZXYgPSB0cnVlO1xufVxuXG5mdW5jdGlvbiBpbml0KCkge1xuICAvLyBDaGVjayBmb3Igd2ViR0wgY2FwYWJpbGl0aWVzXG4gIGlmKCFEZXRlY3Rvci53ZWJnbCkge1xuICAgIERldGVjdG9yLmFkZEdldFdlYkdMTWVzc2FnZSgpO1xuICB9IGVsc2Uge1xuICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhcHBDb250YWluZXInKTtcbiAgICBsZXQgZ3JvdW5kID0gbmV3IFRleHR1cmUoKTtcbiAgICBncm91bmQuYnVpbGRGbG9vck1lc2goKVxuICAgIGdyb3VuZC5yZW5kZXIoMjApXG4gIH1cbn1cblxuaW5pdCgpO1xuIiwiLy8gR2xvYmFsIGltcG9ydHMgLVxuaW1wb3J0ICogYXMgVEhSRUUgZnJvbSAndGhyZWUnO1xuaW1wb3J0IGNocm9tYSBmcm9tICdjaHJvbWEtanMnXG5pbXBvcnQge0J1ZmZlckdlb21ldHJ5VXRpbHN9IGZyb20gJ3RocmVlL2V4YW1wbGVzL2pzbS91dGlscy9CdWZmZXJHZW9tZXRyeVV0aWxzLmpzJ1xuaW1wb3J0IHsgT3JiaXRDb250cm9scyB9IGZyb20gJ3RocmVlL2V4YW1wbGVzL2pzbS9jb250cm9scy9PcmJpdENvbnRyb2xzLmpzJztcbmltcG9ydCB7IEdVSSB9IGZyb20gJ3RocmVlL2V4YW1wbGVzL2pzbS9saWJzL2xpbC1ndWkubW9kdWxlLm1pbi5qcydcbmltcG9ydCBDb2xvckdVSUhlbHBlciBmcm9tICcuLi91dGlscy9Db2xvckdVSUhlbHBlci5qcydcbmltcG9ydCByYW5kb21Db2xvciBmcm9tICdyYW5kb21jb2xvcidcblxubGV0IGN1cnJlbnRHb2FsQ29sb3IgPSBuZXcgVEhSRUUuQ29sb3JcbmxldCBjdXJyZW50Q29sb3IgPSBuZXcgVEhSRUUuQ29sb3JcblxuXG4vLyBUaGlzIGNsYXNzIGluc3RhbnRpYXRlcyBhbmQgdGllcyBhbGwgb2YgdGhlIGNvbXBvbmVudHMgdG9nZXRoZXIsIHN0YXJ0cyB0aGUgbG9hZGluZyBwcm9jZXNzIGFuZCByZW5kZXJzIHRoZSBtYWluIGxvb3BcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRleHR1cmUge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICAvLyBzZXQgdXAgc2NlbmVcbiAgICAgICAgY29uc3QgZm92ID0gNzU7XG4gICAgICAgIGNvbnN0IGFzcGVjdCA9IDI7ICAvLyB0aGUgY2FudmFzIGRlZmF1bHRcbiAgICAgICAgY29uc3QgbmVhciA9IDAuMTtcbiAgICAgICAgY29uc3QgZmFyID0gNTtcbiAgICAgICAgLy8gZm92LCBhc3BlY3QsIG5lYXIsIGZhclxuICAgICAgICB0aGlzLmNhbWVyYSA9IG5ldyBUSFJFRS5QZXJzcGVjdGl2ZUNhbWVyYSg2MCwgd2luZG93LmlubmVyV2lkdGggLyB3aW5kb3cuaW5uZXJIZWlnaHQsIDAuMSwgMTAwMCk7XG4gICAgICAgIHRoaXMuY2FtZXJhLnBvc2l0aW9uLnNldCgwLCAxNSwgOTApXG4gICAgICAgIHRoaXMuc2NlbmUgPSBuZXcgVEhSRUUuU2NlbmUoKTtcbiAgICAgICAgdGhpcy5yZW5kZXJlciA9IG5ldyBUSFJFRS5XZWJHTFJlbmRlcmVyKHthbnRpYWxpc2luZzogdHJ1ZX0pO1xuICAgICAgICB0aGlzLnJlbmRlcmVyLnNoYWRvd01hcEVuYWJsZWQgPSB0cnVlXG4gICAgICAgIC8vY2FtZXJhIGhlbHBlciwgaWYgbmVlZGVkXG4vLyAgICAgICAgdGhpcy5zY2VuZS5hZGQobmV3IFRIUkVFLkNhbWVyYUhlbHBlcih0aGlzLmNhbWVyYSkpXG5cbiAgICAgICAgLy9kbyBub3QgZXZlciBkZWxldGUgbWVcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmQodGhpcy5yZW5kZXJlci5kb21FbGVtZW50KVxuICAgICAgICAgICAgY29uc3QgY29udHJvbHMgPSBuZXcgT3JiaXRDb250cm9scyh0aGlzLmNhbWVyYSwgdGhpcy5yZW5kZXJlci5kb21FbGVtZW50KVxuICAgICAgICBjb250cm9scy50YXJnZXQuc2V0KDAsIDUsIDApXG4gICAgICAgIGNvbnRyb2xzLnVwZGF0ZSgpXG4gICAgICAgIGNvbnN0IGNvbG9yID0gMHhGRkZGRkZcbiAgICAgICAgY29uc3QgaW50ZW5zaXR5ID0gMS4zXG4gICAgICAgIHRoaXMubGlnaHQgPSBuZXcgVEhSRUUuRGlyZWN0aW9uYWxMaWdodChjb2xvciwgaW50ZW5zaXR5KTtcbiAgICAgICAgdGhpcy5saWdodC5wb3NpdGlvbi5zZXRTY2FsYXIoMSlcbiAgICAgICAgdGhpcy5zY2VuZS5hZGQodGhpcy5saWdodC50YXJnZXQpXG4gICAgICAgIHRoaXMuc2NlbmUuYWRkKHRoaXMubGlnaHQsIG5ldyBUSFJFRS5BbWJpZW50TGlnaHQoY29sb3IsIDAuMjUpKVxuICAgICAgICBjb25zdCBndWkgPSBuZXcgR1VJKClcbiAgICAgICAgZ3VpLmFkZENvbG9yKG5ldyBDb2xvckdVSUhlbHBlcih0aGlzLmxpZ2h0LCAnY29sb3InKSwgJ3ZhbHVlJykubmFtZSgnY29sb3InKVxuICAgICAgICBndWkuYWRkKHRoaXMubGlnaHQsICdpbnRlbnNpdHknLCAwLCAyLCAwLjAxKVxuICAgICAgICBjb25zb2xlLmxvZygnZm9vJylcbiAgICAgICAgdGhpcy5yZW5kZXIgPSB0aGlzLnJlbmRlci5iaW5kKHRoaXMpIC8vYmluZCB0byBjbGFzcyBpbnN0ZWFkIG9mIHdpbmRvdyBvYmplY3RcbiAgICAgICAgdGhpcy5idWlsZEZsb29yTWVzaCA9IHRoaXMuYnVpbGRGbG9vck1lc2guYmluZCh0aGlzKVxuXG4gICAgfVxuICAgIGJ1aWxkRmxvb3JNZXNoKCkge1xuICAgICAgICAvL3RleHR1cmUgY3JlYXRpb25cbiAgICAgICAgLy8gYWRhcHRlZCBmcm9tIGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzQ5MzgzNzkxL2xvdy1wb2x5LXRlcnJhaW4tY3JlYXRlZC1ieS1tb2RpZnlpbmctZ2VvbWV0cnktdmVydGljZXMtaXMtcHJvZHVjaW5nLWJsYWNrLWdsaXRjXG4gICAgICAgIGxldCBmbG9vciA9IG5ldyBUSFJFRS5QbGFuZUJ1ZmZlckdlb21ldHJ5KDIwMDAsIDIwMDAsIDEwMCwgMTAwKVxuICAgICAgICBsZXQgY29sb3JzID0gW11cbiAgICAgICAgbGV0IHJhbmRvbUZsb29yVmVydGV4UG9zXG4gICAgICAgIGNvbnNvbGUubG9nKCd2ZXJ0aWNlcz8gJywgZmxvb3IuYXR0cmlidXRlcy5wb3NpdGlvbilcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBmbG9vci5hdHRyaWJ1dGVzLnBvc2l0aW9uLmFycmF5Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhyYW5kb21Db2xvcih7Zm9ybWF0OiAncmdiJ30pKVxuICAgICAgICAgICAgbGV0IGNvbG9yID0gbmV3IFRIUkVFLkNvbG9yKHJhbmRvbUNvbG9yKHtmb3JtYXQ6ICdyZ2InfSkpXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnY29sb3I6ICcsIGNvbG9yKVxuICAgICAgICAgICAgY29sb3JzLnB1c2goY29sb3IuciwgY29sb3IuZywgY29sb3IuYilcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdwaW5nJylcbiAgICAgICAgICAgIGxldCByYW5nZSA9IDIwXG4gICAgICAgICAgICByYW5kb21GbG9vclZlcnRleFBvcyA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqICgoMCkgLSAoLXJhbmdlKSkgKyAoLXJhbmdlKSlcbiAgICAgICAgICAgZmxvb3IuYXR0cmlidXRlcy5wb3NpdGlvbi5zZXRaKGksIHJhbmRvbUZsb29yVmVydGV4UG9zKVxuICAgICAgICB9XG4gICAgICAgIGZsb29yLmF0dHJpYnV0ZXMucG9zaXRpb24ubmVlZHNVcGRhdGUgPSB0cnVlXG4gICAgICAgIGNvbnNvbGUubG9nKCdjb2xvcnM6ICcsIGNvbG9ycylcbiAgICAgICAgZmxvb3Iuc2V0QXR0cmlidXRlKCdjb2xvcicsIG5ldyBUSFJFRS5CdWZmZXJBdHRyaWJ1dGUobmV3IEZsb2F0MzJBcnJheShjb2xvcnMpLCAzKSlcbiAgICAgICAgZmxvb3IuYXR0cmlidXRlcy5jb2xvci5uZWVkc1VwZGF0ZSA9IHRydWVcbiAgICAgICAgZmxvb3IuY29tcHV0ZVZlcnRleE5vcm1hbHMoKVxuXG4gICAgICAgIGxldCBmbG9vck1hdGVyaWFsID0gbmV3IFRIUkVFLk1lc2hQaG9uZ01hdGVyaWFsKHsgY29sb3I6IDB4ZmNiYTAzLyogZm9yIG11bHRpY29sb3I6IHZlcnRleENvbG9yczogdHJ1ZSAqL30pXG4gICAgICAgIGZsb29yTWF0ZXJpYWwuZmxhdFNoYWRpbmcgPSB0cnVlO1xuICAgICAgICBsZXQgZmxvb3JNZXNoID0gbmV3IFRIUkVFLk1lc2goZmxvb3IsIGZsb29yTWF0ZXJpYWwpXG4vLy8gICAgICBmbG9vck1lc2gucG9zaXRpb24ueSA9IC03Mi41XG4gICAgICAgIGZsb29yTWVzaC5yZWNlaXZlU2hhZG93ID0gdHJ1ZVxuICAgICAgICBmbG9vck1lc2guY2FzdFNoYWRvdyA9IHRydWVcbiAgICAgICAgZmxvb3JNZXNoLm5hbWUgPSBcImZsb29yXCJcbiAgICAgICAgZmxvb3JNZXNoLnJvdGF0aW9uLnggPSAtTWF0aC5QSSAvMlxuICAgICAgICBjb25zb2xlLmxvZygnbWVzaCBwb3NpdGlvbiwnLCBmbG9vck1lc2gucG9zaXRpb24pXG4gICAgICAgIHRoaXMuc2NlbmUuYWRkKGZsb29yTWVzaClcbi8vICAgICAgICB0aGlzLmxpZ2h0LnRhcmdldCA9IGZsb29yTWVzaFxuLy8gICAgICAgIHRoaXMuY2FtZXJhLmxvb2tBdChmbG9vck1lc2gpXG5cbiAgICB9XG5cbiAgICByZW5kZXIodGltZSkge1xuLy8gICAgICAgIGlmIChNYXRoLnJvdW5kKHRoaXMuc2hhcGUubWF0ZXJpYWwuY29sb3IucioxMDApLzEwMCA9PSBNYXRoLnJvdW5kKGN1cnJlbnRHb2FsQ29sb3IucioxMDApLzEwMCB8fCB0aW1lID09IDIwKXtcbi8vICAgICAgICAgICAgY3VycmVudEdvYWxDb2xvciA9IG5ldyBUSFJFRS5Db2xvcihyYW5kb21Db2xvcih7Zm9ybWF0OiAncmdiJ30pKVxuLy8gICAgICAgIH1cbiAgICAgICAgLy90aGlzLnNoYXBlLm1hdGVyaWFsLmNvbG9yLnNldChjdXJyZW50Q29sb3IubGVycENvbG9ycyggdGhpcy5zaGFwZS5tYXRlcmlhbC5jb2xvciwgY3VycmVudEdvYWxDb2xvciwgMC4wMykpXG4gICAgICAgIHRpbWUgKj0gMC4wMDFcbi8vICAgICAgICB0aGlzLnNoYXBlLnJvdGF0aW9uLnggPSB0aW1lO1xuLy8gICAgICAgIHRoaXMuc2hhcGUucm90YXRpb24ueSA9IHRpbWVcbiAgICAgICAgLy9cbiAvLyAgICAgICB0aGlzLmNhbWVyYS5yb3RhdGlvbi54ID0gdGltZS8xMlxuICAgICAgICB0aGlzLmNhbWVyYS5yb3RhdGlvbi55ID0gLXRpbWUvNlxuLy8gICAgICAgIHRoaXMuY2FtZXJhLnJvdGF0aW9uLnogPSB0aW1lLzEyXG4gICAgICAgIHRoaXMucmVuZGVyZXIucmVuZGVyKHRoaXMuc2NlbmUsIHRoaXMuY2FtZXJhKVxuICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy5yZW5kZXIpICAgICB9XG5cbn1cblxuXG4iLCJpbXBvcnQgVFdFRU4gZnJvbSAnQHR3ZWVuanMvdHdlZW4uanMnO1xuXG4vLyBUaGlzIG9iamVjdCBjb250YWlucyB0aGUgc3RhdGUgb2YgdGhlIGFwcFxuZXhwb3J0IGRlZmF1bHQge1xuICBpc0RldjogZmFsc2UsXG4gIGlzU2hvd2luZ1N0YXRzOiB0cnVlLFxuICBpc0xvYWRlZDogZmFsc2UsXG4gIGlzVHdlZW5pbmc6IGZhbHNlLFxuICBpc1JvdGF0aW5nOiB0cnVlLFxuICBpc01vdXNlTW92aW5nOiBmYWxzZSxcbiAgaXNNb3VzZU92ZXI6IGZhbHNlLFxuICBtYXhBbmlzb3Ryb3B5OiAxLFxuICBkcHI6IDEsXG4gIGVhc2luZzogVFdFRU4uRWFzaW5nLlF1YWRyYXRpYy5Jbk91dCxcbiAgZHVyYXRpb246IDUwMCxcbiAgbW9kZWw6IHtcbiAgICBzZWxlY3RlZDogMCxcbiAgICBpbml0aWFsVHlwZXM6IFsnZ2x0ZicsICdvYmplY3QnXSxcbiAgICB0eXBlOiAnZ2x0ZidcbiAgfSxcbiAgbW9kZWxzOiBbXG4gICAge1xuICAgICAgcGF0aDogJy4vYXNzZXRzL21vZGVscy9kdWNrLmdsdGYnLFxuICAgICAgc2NhbGU6IDIwLFxuICAgICAgdHlwZTogJ2dsdGYnXG4gICAgfSxcbiAgICB7XG4gICAgICBwYXRoOiAnLi9hc3NldHMvbW9kZWxzL1RlYXBvdC5qc29uJyxcbiAgICAgIHNjYWxlOiAyMCxcbiAgICAgIHR5cGU6ICdvYmplY3QnXG4gICAgfVxuICBdLFxuICB0ZXh0dXJlOiB7XG4gICAgcGF0aDogJy4vYXNzZXRzL3RleHR1cmVzLycsXG4gICAgaW1hZ2VGaWxlczogW1xuICAgICAgeyBuYW1lOiAnVVYnLCBpbWFnZTogJ1VWX0dyaWRfU20uanBnJyB9XG4gICAgXVxuICB9LFxuICBtZXNoOiB7XG4gICAgZW5hYmxlSGVscGVyOiB0cnVlLFxuICAgIHdpcmVmcmFtZTogZmFsc2UsXG4gICAgdHJhbnNsdWNlbnQ6IGZhbHNlLFxuICAgIG1hdGVyaWFsOiB7XG4gICAgICBjb2xvcjogMHhmZmZmZmYsXG4gICAgICBlbWlzc2l2ZTogMHhmZmZmZmZcbiAgICB9XG4gIH0sXG4gIGZvZzoge1xuICAgIGNvbG9yOiAweGZmZmZmZixcbiAgICBuZWFyOiAwLjAwMDhcbiAgfSxcbiAgY2FtZXJhOiB7XG4gICAgZm92OiA0MCxcbiAgICBuZWFyOiAyLFxuICAgIGZhcjogMTAwMCxcbiAgICBhc3BlY3Q6IDEsXG4gICAgcG9zWDogMCxcbiAgICBwb3NZOiAzMCxcbiAgICBwb3NaOiA0MFxuICB9LFxuICBjb250cm9sczoge1xuICAgIGF1dG9Sb3RhdGU6IHRydWUsXG4gICAgYXV0b1JvdGF0ZVNwZWVkOiAtMC41LFxuICAgIHJvdGF0ZVNwZWVkOiAwLjUsXG4gICAgem9vbVNwZWVkOiAwLjgsXG4gICAgbWluRGlzdGFuY2U6IDIwMCxcbiAgICBtYXhEaXN0YW5jZTogNjAwLFxuICAgIG1pblBvbGFyQW5nbGU6IE1hdGguUEkgLyA1LFxuICAgIG1heFBvbGFyQW5nbGU6IE1hdGguUEkgLyAyLFxuICAgIG1pbkF6aW11dGhBbmdsZTogLUluZmluaXR5LFxuICAgIG1heEF6aW11dGhBbmdsZTogSW5maW5pdHksXG4gICAgZW5hYmxlRGFtcGluZzogdHJ1ZSxcbiAgICBkYW1waW5nRmFjdG9yOiAwLjUsXG4gICAgZW5hYmxlWm9vbTogdHJ1ZSxcbiAgICB0YXJnZXQ6IHtcbiAgICAgIHg6IDAsXG4gICAgICB5OiAwLFxuICAgICAgejogMFxuICAgIH1cbiAgfSxcbiAgYW1iaWVudExpZ2h0OiB7XG4gICAgZW5hYmxlZDogdHJ1ZSxcbiAgICBjb2xvcjogMHgxNDE0MTRcbiAgfSxcbiAgZGlyZWN0aW9uYWxMaWdodDoge1xuICAgIGVuYWJsZWQ6IHRydWUsXG4gICAgY29sb3I6IDB4ZjBmMGYwLFxuICAgIGludGVuc2l0eTogMC40LFxuICAgIHg6IC03NSxcbiAgICB5OiAyODAsXG4gICAgejogMTUwXG4gIH0sXG4gIHNoYWRvdzoge1xuICAgIGVuYWJsZWQ6IHRydWUsXG4gICAgaGVscGVyRW5hYmxlZDogdHJ1ZSxcbiAgICBiaWFzOiAwLFxuICAgIG1hcFdpZHRoOiAyMDQ4LFxuICAgIG1hcEhlaWdodDogMjA0OCxcbiAgICBuZWFyOiAyNTAsXG4gICAgZmFyOiA0MDAsXG4gICAgdG9wOiAxMDAsXG4gICAgcmlnaHQ6IDEwMCxcbiAgICBib3R0b206IC0xMDAsXG4gICAgbGVmdDogLTEwMFxuICB9LFxuICBwb2ludExpZ2h0OiB7XG4gICAgZW5hYmxlZDogdHJ1ZSxcbiAgICBjb2xvcjogMHhmZmZmZmYsXG4gICAgaW50ZW5zaXR5OiAwLjM0LFxuICAgIGRpc3RhbmNlOiAxMTUsXG4gICAgeDogMCxcbiAgICB5OiAwLFxuICAgIHo6IDBcbiAgfSxcbiAgaGVtaUxpZ2h0OiB7XG4gICAgZW5hYmxlZDogdHJ1ZSxcbiAgICBjb2xvcjogMHhjOGM4YzgsXG4gICAgZ3JvdW5kQ29sb3I6IDB4ZmZmZmZmLFxuICAgIGludGVuc2l0eTogMC41NSxcbiAgICB4OiAwLFxuICAgIHk6IDAsXG4gICAgejogMFxuICB9XG59O1xuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ29sb3JHVUlIZWxwZXIge1xuICAgICAgY29uc3RydWN0b3Iob2JqZWN0LCBwcm9wKSB7XG4gICAgICAgIHRoaXMub2JqZWN0ID0gb2JqZWN0O1xuICAgICAgICB0aGlzLnByb3AgPSBwcm9wO1xuICAgICAgfVxuICAgICAgZ2V0IHZhbHVlKCkge1xuICAgICAgICByZXR1cm4gYCMke3RoaXMub2JqZWN0W3RoaXMucHJvcF0uZ2V0SGV4U3RyaW5nKCl9YDtcbiAgICAgIH1cbiAgICAgIHNldCB2YWx1ZShoZXhTdHJpbmcpIHtcbiAgICAgICAgdGhpcy5vYmplY3RbdGhpcy5wcm9wXS5zZXQoaGV4U3RyaW5nKTtcbiAgICAgIH1cbn1cbiIsIi8qKlxuICogQGF1dGhvciBhbHRlcmVkcSAvIGh0dHA6Ly9hbHRlcmVkcXVhbGlhLmNvbS9cbiAqIEBhdXRob3IgbXIuZG9vYiAvIGh0dHA6Ly9tcmRvb2IuY29tL1xuICovXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgY2FudmFzOiAhIXdpbmRvdy5DYW52YXNSZW5kZXJpbmdDb250ZXh0MkQsXG4gIHdlYmdsOiAoZnVuY3Rpb24oKSB7XG4gICAgdHJ5IHtcbiAgICAgIHZhciBjYW52YXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdjYW52YXMnKTtcblxuICAgICAgcmV0dXJuICEhKHdpbmRvdy5XZWJHTFJlbmRlcmluZ0NvbnRleHQgJiYgKGNhbnZhcy5nZXRDb250ZXh0KCd3ZWJnbCcpIHx8IGNhbnZhcy5nZXRDb250ZXh0KCdleHBlcmltZW50YWwtd2ViZ2wnKSkpO1xuICAgIH0gY2F0Y2goZSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfSkoKSxcblxuICB3b3JrZXJzOiAhIXdpbmRvdy5Xb3JrZXIsXG4gIGZpbGVhcGk6IHdpbmRvdy5GaWxlICYmIHdpbmRvdy5GaWxlUmVhZGVyICYmIHdpbmRvdy5GaWxlTGlzdCAmJiB3aW5kb3cuQmxvYixcblxuICBnZXRXZWJHTEVycm9yTWVzc2FnZTogZnVuY3Rpb24oKSB7XG4gICAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBlbGVtZW50LmlkID0gJ3dlYmdsLWVycm9yLW1lc3NhZ2UnO1xuICAgIGVsZW1lbnQuc3R5bGUuZm9udEZhbWlseSA9ICdtb25vc3BhY2UnO1xuICAgIGVsZW1lbnQuc3R5bGUuZm9udFNpemUgPSAnMTNweCc7XG4gICAgZWxlbWVudC5zdHlsZS5mb250V2VpZ2h0ID0gJ25vcm1hbCc7XG4gICAgZWxlbWVudC5zdHlsZS50ZXh0QWxpZ24gPSAnY2VudGVyJztcbiAgICBlbGVtZW50LnN0eWxlLmJhY2tncm91bmQgPSAnI2ZmZic7XG4gICAgZWxlbWVudC5zdHlsZS5jb2xvciA9ICcjMDAwJztcbiAgICBlbGVtZW50LnN0eWxlLnBhZGRpbmcgPSAnMS41ZW0nO1xuICAgIGVsZW1lbnQuc3R5bGUud2lkdGggPSAnNDAwcHgnO1xuICAgIGVsZW1lbnQuc3R5bGUubWFyZ2luID0gJzVlbSBhdXRvIDAnO1xuXG4gICAgaWYoIXRoaXMud2ViZ2wpIHtcbiAgICAgIGVsZW1lbnQuaW5uZXJIVE1MID0gd2luZG93LldlYkdMUmVuZGVyaW5nQ29udGV4dCA/IFtcbiAgICAgICAgJ1lvdXIgZ3JhcGhpY3MgY2FyZCBkb2VzIG5vdCBzZWVtIHRvIHN1cHBvcnQgPGEgaHJlZj1cImh0dHA6Ly9raHJvbm9zLm9yZy93ZWJnbC93aWtpL0dldHRpbmdfYV9XZWJHTF9JbXBsZW1lbnRhdGlvblwiIHN0eWxlPVwiY29sb3I6IzAwMDAwMFwiPldlYkdMPC9hPi48YnIgLz4nLFxuICAgICAgICAnRmluZCBvdXQgaG93IHRvIGdldCBpdCA8YSBocmVmPVwiaHR0cDovL2dldC53ZWJnbC5vcmcvXCIgc3R5bGU9XCJjb2xvcjojMDAwMDAwXCI+aGVyZTwvYT4uJ1xuICAgICAgXS5qb2luKCdcXG4nKSA6IFtcbiAgICAgICAgJ1lvdXIgYnJvd3NlciBkb2VzIG5vdCBzZWVtIHRvIHN1cHBvcnQgPGEgaHJlZj1cImh0dHA6Ly9raHJvbm9zLm9yZy93ZWJnbC93aWtpL0dldHRpbmdfYV9XZWJHTF9JbXBsZW1lbnRhdGlvblwiIHN0eWxlPVwiY29sb3I6IzAwMDAwMFwiPldlYkdMPC9hPi48YnIvPicsXG4gICAgICAgICdGaW5kIG91dCBob3cgdG8gZ2V0IGl0IDxhIGhyZWY9XCJodHRwOi8vZ2V0LndlYmdsLm9yZy9cIiBzdHlsZT1cImNvbG9yOiMwMDAwMDBcIj5oZXJlPC9hPi4nXG4gICAgICBdLmpvaW4oJ1xcbicpO1xuICAgIH1cblxuICAgIHJldHVybiBlbGVtZW50O1xuICB9LFxuXG4gIGFkZEdldFdlYkdMTWVzc2FnZTogZnVuY3Rpb24ocGFyYW1ldGVycykge1xuICAgIHZhciBwYXJlbnQsIGlkLCBlbGVtZW50O1xuXG4gICAgcGFyYW1ldGVycyA9IHBhcmFtZXRlcnMgfHwge307XG5cbiAgICBwYXJlbnQgPSBwYXJhbWV0ZXJzLnBhcmVudCAhPT0gdW5kZWZpbmVkID8gcGFyYW1ldGVycy5wYXJlbnQgOiBkb2N1bWVudC5ib2R5O1xuICAgIGlkID0gcGFyYW1ldGVycy5pZCAhPT0gdW5kZWZpbmVkID8gcGFyYW1ldGVycy5pZCA6ICdvbGRpZSc7XG5cbiAgICBlbGVtZW50ID0gdGhpcy5nZXRXZWJHTEVycm9yTWVzc2FnZSgpO1xuICAgIGVsZW1lbnQuaWQgPSBpZDtcblxuICAgIHBhcmVudC5hcHBlbmRDaGlsZChlbGVtZW50KTtcbiAgfVxufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=