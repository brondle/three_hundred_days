/*! For license information please see main.bundle.js.LICENSE.txt */
(self.webpackChunkthreejs_es6_webpack_boilerplate=self.webpackChunkthreejs_es6_webpack_boilerplate||[]).push([["main"],{"./src/js/app.js":(e,t,s)=>{"use strict";s.r(t);var o=s("./src/js/data/config.js"),n=s("./src/js/utils/detector.js"),r=s("./src/js/app/main.js");s("./src/css/app.scss");console.log("----- RUNNING IN DEV ENVIRONMENT! -----"),o.default.isDev=!0,function(){if(n.default.webgl){document.getElementById("appContainer");(new r.default).render(20,0)}else n.default.addGetWebGLMessage()}()},"./src/js/app/main.js":(e,t,s)=>{"use strict";s.r(t),s.d(t,{default:()=>a});var o=s("./node_modules/three/build/three.module.js"),n=(s("./node_modules/chroma-js/chroma.js"),s("./node_modules/three/examples/jsm/controls/OrbitControls.js")),r=s("../node_modules/three/examples/jsm/libs/lil-gui.module.min.js"),i=s("./src/js/utils/ColorGUIHelper.js");s("./node_modules/randomcolor/randomColor.js");new o.Color,new o.Color;class a{constructor(){this.camera=new o.PerspectiveCamera(60,window.innerWidth/window.innerHeight,.1,300),this.camera.position.set(0,10,90),this.camera.lookAt(new o.Vector3(5e3,200,2e4)),this.scene=new o.Scene,this.renderer=new o.WebGLRenderer({antialising:!0}),this.renderer.setPixelRatio(2),this.renderer.shadowMapEnabled=!0,document.body.append(this.renderer.domElement);const e=16777215;this.light=new o.DirectionalLight(e,1.3),this.light.position.setScalar(1),this.scene.add(this.light.target),this.scene.add(this.light,new o.AmbientLight(e,.25));let t=new o.Color("lightblue");this.scene.background=t;const s=t;this.scene.fog=new o.Fog(s,15e3,25e3);const a=new n.OrbitControls(this.camera,this.renderer.domElement);a.target.set(0,5,0),a.update();const l=new r.GUI;l.addColor(new i.default(this.light,"color"),"value").name("color"),l.add(this.light,"intensity",0,2,.01);const d=new o.TextureLoader,c=d.load("hank.jpg");console.log("texture: ",c);const h=new o.MeshBasicMaterial({map:c});h.magFilter=o.LinearMipMapLinearFilter,h.minFilter=o.LinearFilter;const p=new o.SphereGeometry(20,200),g=new o.Mesh(p,h),m=new o.BoxGeometry(20,20,20),u=new o.Mesh(m,h);u.position.y=29;const w=new o.ConeGeometry(20,20,3),b=d.load("hank.jpg");b.repeat.set(3,1),b.wrapS=o.RepeatWrapping,b.offset.set(-.25,.15);const f=new o.MeshBasicMaterial({map:b}),j=new o.Mesh(w,f);j.position.y=-29,this.shapes=[u,g,j],this.scene.add(g,u,j),this.render=this.render.bind(this)}render(e,t){this.renderer.setAnimationLoop((()=>{const t=-5e-4*e;this.shapes.forEach((e=>{e.rotation.y+=t})),this.renderer.render(this.scene,this.camera)}))}}},"./src/js/data/config.js":(e,t,s)=>{"use strict";s.r(t),s.d(t,{default:()=>o});const o={isDev:!1,isShowingStats:!0,isLoaded:!1,isTweening:!1,isRotating:!0,isMouseMoving:!1,isMouseOver:!1,maxAnisotropy:1,dpr:1,easing:s("./node_modules/@tweenjs/tween.js/dist/tween.esm.js").default.Easing.Quadratic.InOut,duration:500,model:{selected:0,initialTypes:["gltf","object"],type:"gltf"},models:[{path:"./assets/models/duck.gltf",scale:20,type:"gltf"},{path:"./assets/models/Teapot.json",scale:20,type:"object"}],texture:{path:"./assets/textures/",imageFiles:[{name:"UV",image:"UV_Grid_Sm.jpg"}]},mesh:{enableHelper:!0,wireframe:!1,translucent:!1,material:{color:16777215,emissive:16777215}},fog:{color:16777215,near:8e-4},camera:{fov:40,near:2,far:1e3,aspect:1,posX:0,posY:30,posZ:40},controls:{autoRotate:!0,autoRotateSpeed:-.5,rotateSpeed:.5,zoomSpeed:.8,minDistance:200,maxDistance:600,minPolarAngle:Math.PI/5,maxPolarAngle:Math.PI/2,minAzimuthAngle:-1/0,maxAzimuthAngle:1/0,enableDamping:!0,dampingFactor:.5,enableZoom:!0,target:{x:0,y:0,z:0}},ambientLight:{enabled:!0,color:1315860},directionalLight:{enabled:!0,color:15790320,intensity:.4,x:-75,y:280,z:150},shadow:{enabled:!0,helperEnabled:!0,bias:0,mapWidth:2048,mapHeight:2048,near:250,far:400,top:100,right:100,bottom:-100,left:-100},pointLight:{enabled:!0,color:16777215,intensity:.34,distance:115,x:0,y:0,z:0},hemiLight:{enabled:!0,color:13158600,groundColor:16777215,intensity:.55,x:0,y:0,z:0}}},"./src/js/utils/ColorGUIHelper.js":(e,t,s)=>{"use strict";s.r(t),s.d(t,{default:()=>o});class o{constructor(e,t){this.object=e,this.prop=t}get value(){return`#${this.object[this.prop].getHexString()}`}set value(e){this.object[this.prop].set(e)}}},"./src/js/utils/detector.js":(e,t,s)=>{"use strict";s.r(t),s.d(t,{default:()=>o});const o={canvas:!!window.CanvasRenderingContext2D,webgl:function(){try{var e=document.createElement("canvas");return!(!window.WebGLRenderingContext||!e.getContext("webgl")&&!e.getContext("experimental-webgl"))}catch(e){return!1}}(),workers:!!window.Worker,fileapi:window.File&&window.FileReader&&window.FileList&&window.Blob,getWebGLErrorMessage:function(){var e=document.createElement("div");return e.id="webgl-error-message",e.style.fontFamily="monospace",e.style.fontSize="13px",e.style.fontWeight="normal",e.style.textAlign="center",e.style.background="#fff",e.style.color="#000",e.style.padding="1.5em",e.style.width="400px",e.style.margin="5em auto 0",this.webgl||(e.innerHTML=window.WebGLRenderingContext?['Your graphics card does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000000">WebGL</a>.<br />','Find out how to get it <a href="http://get.webgl.org/" style="color:#000000">here</a>.'].join("\n"):['Your browser does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000000">WebGL</a>.<br/>','Find out how to get it <a href="http://get.webgl.org/" style="color:#000000">here</a>.'].join("\n")),e},addGetWebGLMessage:function(e){var t,s,o;t=void 0!==(e=e||{}).parent?e.parent:document.body,s=void 0!==e.id?e.id:"oldie",(o=this.getWebGLErrorMessage()).id=s,t.appendChild(o)}}},"./src/css/app.scss":(e,t,s)=>{"use strict";s.r(t)}},e=>{"use strict";e.O(0,["vendors"],(()=>{return t="./src/js/app.js",e(e.s=t);var t}));e.O()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,