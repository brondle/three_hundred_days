/*! For license information please see main.bundle.js.LICENSE.txt */
(self.webpackChunkthreejs_es6_webpack_boilerplate=self.webpackChunkthreejs_es6_webpack_boilerplate||[]).push([["main"],{"./src/js/app.js":(e,t,n)=>{"use strict";n.r(t);var r=n("./src/js/data/config.js"),o=(n("./src/js/utils/detector.js"),n("./src/js/app/main.js")),s=n("./node_modules/react/index.js"),a=n("./node_modules/react-dom/index.js"),i=n("./src/js/components/React/TextForm.js");n("./src/css/assets/main.css");function c(e){return(c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function u(e,t){return(u=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function d(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=p(e);if(t){var o=p(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return f(this,n)}}function f(e,t){return!t||"object"!==c(t)&&"function"!=typeof t?h(e):t}function h(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function p(e){return(p=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}console.log("----- RUNNING IN DEV ENVIRONMENT! -----"),r.default.isDev=!0;var m="A Squid Eating Dough In A PolyEthylene Bag",g=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&u(e,t)}(c,e);var t,n,r,a=d(c);function c(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(t=a.call(this,e)).state={value:m},t.three,t.handleChange=t.handleChange.bind(h(t)),t}return t=c,(n=[{key:"componentDidMount",value:function(){this.three=new o.default(this.state.value),this.three.render(20)}},{key:"handleChange",value:function(e){var t=this;console.log("new val: ",e.target.value),this.setState({value:e.target.value},(function(){t.three.updateText(t.state.value)}))}},{key:"render",value:function(){return s.createElement("div",{className:"grid grid-cols-1"},s.createElement(i.default,{handleChange:this.handleChange,value:this.state.value}))}}])&&l(t.prototype,n),r&&l(t,r),c}(s.Component),b=document.getElementById("root");a.render(s.createElement(g,{value:m}),b)},"./src/js/app/main.js":(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>d});var r=n("./node_modules/three/build/three.module.js"),o=n("./src/js/components/Three/camera.js"),s=n("./src/js/components/Three/lights.js"),a=n("./src/js/components/Three/renderer.js"),i=(n("./src/js/components/Three/fog.js"),n("./src/js/components/Three/controls.js")),c=n("./src/js/components/Three/createText.js"),l=n("./node_modules/three/examples/fonts/helvetiker_regular.typeface.json");function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var d=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.camera=(0,o.createCamera)(),this.renderer=(0,a.createRenderer)(),this.scene=new r.Scene;var n=16777215;this.light=(0,s.createLights)(n,1.3),this.scene.add(this.light.target),this.scene.add(this.light,new r.AmbientLight(n,.25));var u=new r.Color(16777215);this.scene.background=u,(0,i.createControls)(this.camera,this.renderer,this.light),this.text=(0,c.createText)(t,l),this.scene.add(this.text),this.render=this.render.bind(this)}var t,n,d;return t=e,(n=[{key:"updateText",value:function(e){console.log("newText: ",e),this.text.geometry.dispose(),this.text.material.dispose(),this.scene.remove(this.text),this.text=(0,c.createText)(e,l),this.scene.add(this.text),this.text.position.set(-150,500,0)}},{key:"render",value:function(e,t){var n=this;this.renderer.setAnimationLoop((function(){(0,c.lerpColor)(n.text,e),n.text.material.needsUpdate=!0,n.renderer.render(n.scene,n.camera)}))}}])&&u(t.prototype,n),d&&u(t,d),e}()},"./src/js/components/React/TextForm.js":(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>d});var r=n("./node_modules/react/index.js");n("./node_modules/react-dom/index.js");function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function a(e,t){return(a=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function i(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=u(e);if(t){var o=u(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return c(this,n)}}function c(e,t){return!t||"object"!==o(t)&&"function"!=typeof t?l(e):t}function l(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function u(e){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}console.log("ping");var d=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&a(e,t)}(u,e);var t,n,o,c=i(u);function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),t=c.call(this,e),console.log("props: ",e),t.handleChange=t.handleChange.bind(l(t)),t.handleSubmit=t.handleSubmit.bind(l(t)),t}return t=u,(n=[{key:"handleChange",value:function(e){this.props.handleChange(e)}},{key:"handleSubmit",value:function(e){e.preventDefault()}},{key:"render",value:function(){return r.createElement("form",{onSubmit:this.handleSubmit,className:"grid place-items-center justify-items-center text-xl"},r.createElement("input",{className:"flex grow border-black w-1/2 block bg-white border border-slate-300 rounded-md py-2 pl-9 pr-3 shadow-sm focus:outline-none focus:border-sky-500 focus:ring-sky-500 focus:ring-1 text-center",type:"text",value:this.props.value,onChange:this.handleChange}))}}])&&s(t.prototype,n),o&&s(t,o),u}(r.Component)},"./src/js/components/Three/camera.js":(e,t,n)=>{"use strict";n.r(t),n.d(t,{createCamera:()=>o});var r=n("./node_modules/three/build/three.module.js");function o(){var e=new r.PerspectiveCamera(45,window.innerWidth/window.innerHeight,.1,3e4);return e.position.set(1673,-19,2015),e}},"./src/js/components/Three/controls.js":(e,t,n)=>{"use strict";n.r(t),n.d(t,{createControls:()=>a});var r=n("./node_modules/three/examples/jsm/controls/OrbitControls.js"),o=n("../node_modules/three/examples/jsm/libs/lil-gui.module.min.js"),s=n("./src/js/utils/ColorGUIHelper.js");function a(e,t,n){var a=new r.OrbitControls(e,t.domElement);a.target.set(0,5,0),a.update();var i=new o.GUI;i.addColor(new s.default(n,"color"),"value").name("color"),i.add(n,"intensity",0,2,.01)}},"./src/js/components/Three/createText.js":(e,t,n)=>{"use strict";n.r(t),n.d(t,{createText:()=>l,lerpColor:()=>u});var r=n("./node_modules/three/build/three.module.js"),o=n("./node_modules/randomcolor/randomColor.js"),s=n.n(o),a=new r.FontLoader,i=new r.Color,c=new r.Color;function l(e,t){t=a.parse(t),console.log("font: ",t);var n=new r.TextGeometry(e,{font:t});n.center();var o=new r.MeshBasicMaterial({color:c});return new r.Mesh(n,o)}function u(e,t){Math.round(100*e.material.color.r)/100!=Math.round(100*i.r)/100&&20!=t||(i=new r.Color(s()({format:"rgb"}))),e.material.color.set(c.lerpColors(e.material.color,i,.03)),t*=5e-4,e.rotation.y+=t}},"./src/js/components/Three/fog.js":(e,t,n)=>{"use strict";n.r(t),n.d(t,{createFog:()=>o});var r=n("./node_modules/three/build/three.module.js");function o(e,t,n){return new r.Fog(e,t,n)}},"./src/js/components/Three/lights.js":(e,t,n)=>{"use strict";n.r(t),n.d(t,{createLights:()=>o});var r=n("./node_modules/three/build/three.module.js");function o(e,t){var n=new r.DirectionalLight(e,t);return n.position.setScalar(1),n}},"./src/js/components/Three/renderer.js":(e,t,n)=>{"use strict";n.r(t),n.d(t,{createRenderer:()=>o});var r=n("./node_modules/three/build/three.module.js");function o(){var e=new r.WebGLRenderer({antialias:!0});return e.setSize(window.innerWidth,window.innerHeight),e.physicallyCorrectLights=!0,e.shadowMapEnabled=!0,document.body.append(e.domElement),e}},"./src/js/data/config.js":(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r={isDev:!1,isShowingStats:!0,isLoaded:!1,isTweening:!1,isRotating:!0,isMouseMoving:!1,isMouseOver:!1,maxAnisotropy:1,dpr:1,easing:n("./node_modules/@tweenjs/tween.js/dist/tween.esm.js").default.Easing.Quadratic.InOut,duration:500,model:{selected:0,initialTypes:["gltf","object"],type:"gltf"},models:[{path:"./assets/models/duck.gltf",scale:20,type:"gltf"},{path:"./assets/models/Teapot.json",scale:20,type:"object"}],texture:{path:"./assets/textures/",imageFiles:[{name:"UV",image:"UV_Grid_Sm.jpg"}]},mesh:{enableHelper:!0,wireframe:!1,translucent:!1,material:{color:16777215,emissive:16777215}},fog:{color:16777215,near:8e-4},camera:{fov:40,near:2,far:1e3,aspect:1,posX:0,posY:30,posZ:40},controls:{autoRotate:!0,autoRotateSpeed:-.5,rotateSpeed:.5,zoomSpeed:.8,minDistance:200,maxDistance:600,minPolarAngle:Math.PI/5,maxPolarAngle:Math.PI/2,minAzimuthAngle:-1/0,maxAzimuthAngle:1/0,enableDamping:!0,dampingFactor:.5,enableZoom:!0,target:{x:0,y:0,z:0}},ambientLight:{enabled:!0,color:1315860},directionalLight:{enabled:!0,color:15790320,intensity:.4,x:-75,y:280,z:150},shadow:{enabled:!0,helperEnabled:!0,bias:0,mapWidth:2048,mapHeight:2048,near:250,far:400,top:100,right:100,bottom:-100,left:-100},pointLight:{enabled:!0,color:16777215,intensity:.34,distance:115,x:0,y:0,z:0},hemiLight:{enabled:!0,color:13158600,groundColor:16777215,intensity:.55,x:0,y:0,z:0}}},"./src/js/utils/ColorGUIHelper.js":(e,t,n)=>{"use strict";function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}n.r(t),n.d(t,{default:()=>o});var o=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.object=t,this.prop=n}var t,n,o;return t=e,(n=[{key:"value",get:function(){return"#".concat(this.object[this.prop].getHexString())},set:function(e){this.object[this.prop].set(e)}}])&&r(t.prototype,n),o&&r(t,o),e}()},"./src/js/utils/detector.js":(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r={canvas:!!window.CanvasRenderingContext2D,webgl:function(){try{var e=document.createElement("canvas");return!(!window.WebGLRenderingContext||!e.getContext("webgl")&&!e.getContext("experimental-webgl"))}catch(e){return!1}}(),workers:!!window.Worker,fileapi:window.File&&window.FileReader&&window.FileList&&window.Blob,getWebGLErrorMessage:function(){var e=document.createElement("div");return e.id="webgl-error-message",e.style.fontFamily="monospace",e.style.fontSize="13px",e.style.fontWeight="normal",e.style.textAlign="center",e.style.background="#fff",e.style.color="#000",e.style.padding="1.5em",e.style.width="400px",e.style.margin="5em auto 0",this.webgl||(e.innerHTML=window.WebGLRenderingContext?['Your graphics card does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000000">WebGL</a>.<br />','Find out how to get it <a href="http://get.webgl.org/" style="color:#000000">here</a>.'].join("\n"):['Your browser does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000000">WebGL</a>.<br/>','Find out how to get it <a href="http://get.webgl.org/" style="color:#000000">here</a>.'].join("\n")),e},addGetWebGLMessage:function(e){var t,n,r;t=void 0!==(e=e||{}).parent?e.parent:document.body,n=void 0!==e.id?e.id:"oldie",(r=this.getWebGLErrorMessage()).id=n,t.appendChild(r)}}}},e=>{"use strict";e.O(0,["vendors","styles"],(()=>{return t="./src/js/app.js",e(e.s=t);var t}));e.O()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,